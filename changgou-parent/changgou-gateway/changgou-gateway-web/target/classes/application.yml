spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # 匹配所有请求
              allowedOrigins: "*" #跨域处理 允许所有的域
              allowedMethods: # 支持的方法
                - GET
                - POST
                - PUT
                - DELETE

      routes:
          - id: changgou_goods_route
            #指定路由的服务
            uri: lb://goods
            #路由断言，路由规则配置
            predicates:
            - Path=/api/goods/**
            filters:
              - StripPrefix=1
              - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
                args:
                  key-resolver: "#{@ipKeyResolver}"
                  redis-rate-limiter.replenishRate: 1
                  redis-rate-limiter.burstCapacity: 1
          #用户微服务
          - id: changgou_user_route
            uri: http://localhost:18089
            predicates:
              - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
            filters:
              - StripPrefix=1
#      routes:
#          #唯一标识符
#          - id: changgou_goods_route
#            #用户请求需要路由到该服务[指定路由的服务]
##            uri: http://localhost:18081
#            #客户端负载均衡,将微服务为goods的服务进行负载均衡,用于集群环境
#            uri: lb://goods
#            predicates:
##              # 用户请求的域名规则配置
##            - Host=cloud.gateway.com**
#            #对请求路径进行过滤路由
##            - Path=/brand/**
#            - Path=/api/**
##            - Path=/**
#            filters:
#            #将请求路径中的第一个路径去掉,请求路径以/区分,一个/代表一个路径
#            - StripPrefix=1
#            #用户请求/** > /brand/** 并路由到指定的微服务
##            - PrefixPath=/brand
#            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
#              args:
#                #用户身份唯一标识符
#                key-resolver: "#{@ipKeyResolver}"
#                #每秒允许的并发
#                redis-rate-limiter.replenishRate: 1
#                #每秒并发宽限
#                redis-rate-limiter.burstCapacity: 4


  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 192.168.31.132
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true